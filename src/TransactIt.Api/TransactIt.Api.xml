<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TransactIt.Api</name>
    </assembly>
    <members>
        <member name="T:TransactIt.Api.Controllers.AccountsController">
            <summary>
            Accounts controller.
            </summary>
        </member>
        <member name="M:TransactIt.Api.Controllers.AccountsController.#ctor(MediatR.IMediator)">
            <summary>
            Creates a new instance of <see cref="T:TransactIt.Api.Controllers.AccountsController"/>.
            </summary>
            <param name="mediator">The request mediator.</param>
        </member>
        <member name="M:TransactIt.Api.Controllers.AccountsController.Create(System.Int32,TransactIt.Domain.Models.Account)">
            <summary>
            Creates a new account.
            </summary>
            <param name="id">The parent sub account group identifier.</param>
            <param name="model">A account model sent through request body.</param>
            <returns>This is a command it does not send a modeled response.</returns>
        </member>
        <member name="T:TransactIt.Api.Controllers.LedgersController">
            <summary>
            Ledgers controller.
            </summary>
        </member>
        <member name="M:TransactIt.Api.Controllers.LedgersController.#ctor(MediatR.IMediator)">
            <summary>
            Creates a new instance of <see cref="T:TransactIt.Api.Controllers.LedgersController"/>.
            </summary>
            <param name="mediator">The request mediator.</param>
        </member>
        <member name="M:TransactIt.Api.Controllers.LedgersController.Get">
            <summary>
            Gets all ledgers.
            </summary>
            <returns>A list of ledgers <see cref="T:TransactIt.Domain.Models.Ledger"/></returns>
        </member>
        <member name="M:TransactIt.Api.Controllers.LedgersController.Get(System.Int32)">
            <summary>
            Gets the specific ledger by identifier.
            </summary>
            <param name="id">The ledger identifier.</param>
            <returns>A specific ledger <see cref="T:TransactIt.Domain.Models.Ledger"/></returns>
        </member>
        <member name="M:TransactIt.Api.Controllers.LedgersController.Create(TransactIt.Domain.Models.Ledger)">
            <summary>
            Creates a new ledger.
            </summary>
            <param name="model">A ledger model sent through request body.</param>
            <returns>This is a command it does not send a modeled response.</returns>
        </member>
        <member name="T:TransactIt.Api.Controllers.MainAccountGroupsController">
            <summary>
            Main account groups controller.
            </summary>
        </member>
        <member name="M:TransactIt.Api.Controllers.MainAccountGroupsController.#ctor(MediatR.IMediator)">
            <summary>
            Creates a new instance of <see cref="T:TransactIt.Api.Controllers.MainAccountGroupsController"/>.
            </summary>
            <param name="mediator">The request mediator.</param>
        </member>
        <member name="M:TransactIt.Api.Controllers.MainAccountGroupsController.Create(System.Int32,TransactIt.Domain.Models.MainAccountGroup)">
            <summary>
            Creates a new main account group.
            </summary>
            <param name="id">The parent ledger identifier.</param>
            <param name="model">A ledger main account group model sent through request body.</param>
            <returns>This is a command it does not send a modeled response.</returns>
        </member>
        <member name="T:TransactIt.Api.Controllers.SubAccountGroupsController">
            <summary>
            Ledger sub account groups controller.
            </summary>
        </member>
        <member name="M:TransactIt.Api.Controllers.SubAccountGroupsController.#ctor(MediatR.IMediator)">
            <summary>
            Creates a new instance of <see cref="T:TransactIt.Api.Controllers.SubAccountGroupsController"/>.
            </summary>
            <param name="mediator">The request mediator.</param>
        </member>
        <member name="M:TransactIt.Api.Controllers.SubAccountGroupsController.Create(System.Int32,TransactIt.Domain.Models.SubAccountGroup)">
            <summary>
            Creates a new sub account group.
            </summary>
            <param name="id">The parent main account group identifier.</param>
            <param name="model">A sub account group model sent through request body.</param>
            <returns>This is a command it does not send a modeled response.</returns>
        </member>
        <member name="T:TransactIt.Api.Controllers.TransactionsController">
            <summary>
            Transactions controller.
            </summary>
        </member>
        <member name="M:TransactIt.Api.Controllers.TransactionsController.#ctor(MediatR.IMediator)">
            <summary>
            Creates a new instance of <see cref="T:TransactIt.Api.Controllers.TransactionsController"/>.
            </summary>
            <param name="mediator">The request mediator.</param>
        </member>
        <member name="M:TransactIt.Api.Controllers.TransactionsController.Create(System.Int32,TransactIt.Domain.Models.Transaction)">
            <summary>
            Creates a new transaction.
            </summary>
            <param name="id">The parent ledger identifier.</param>
            <param name="model">A transaction model sent through request body.</param>
            <returns>This is a command it does not send a modeled response.</returns>
        </member>
        <member name="M:TransactIt.Api.Controllers.TransactionsController.Get(System.Int32)">
            <summary>
            Get generated transaction template rules for transaction.
            </summary>
            <param name="id">The transaction identifier.</param>
            <returns>An array of transaction template rules representing the transactions accounting entries.</returns>
        </member>
        <member name="T:TransactIt.Api.Controllers.TransactionTemplatesController">
            <summary>
            Transaction templates controller.
            </summary>
        </member>
        <member name="M:TransactIt.Api.Controllers.TransactionTemplatesController.#ctor(MediatR.IMediator)">
            <summary>
            Creates a new instance of <see cref="T:TransactIt.Api.Controllers.TransactionTemplatesController"/>.
            </summary>
            <param name="mediator">The request mediator.</param>
        </member>
        <member name="M:TransactIt.Api.Controllers.TransactionTemplatesController.Create(System.Int32,TransactIt.Domain.Models.TransactionTemplate)">
            <summary>
            Creates a transaction template with rules for how the transaction should be distributed.
            </summary>
            <param name="id">The parent ledger identifier.</param>
            <param name="model">A transaction template model sent through request body.</param>
            <returns>This is a command it does not send a modeled response.</returns>
        </member>
        <member name="M:TransactIt.Api.Controllers.TransactionTemplatesController.Get(System.Int32)">
            <summary>
            Gets all transaction templates belonging to the specified ledger.
            </summary>
            <param name="id">The parent ledger identifier.</param>
            <returns>An array of transaction templates</returns>
        </member>
        <member name="M:TransactIt.Api.Controllers.TransactionTemplatesController.Get(System.Int32,System.Decimal)">
            <summary>
            Get the distribution for the amount using the specified transaction template.
            </summary>
            <param name="id">The transaction template identifier.</param>
            <param name="amount">The amount to distribute</param>
            <returns>An array of accounting entries representing the distributed amount.</returns>
        </member>
    </members>
</doc>
